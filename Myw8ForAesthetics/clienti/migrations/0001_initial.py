# Generated by Django 4.2.4 on 2023-12-15 11:28

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accordi', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnagraficaCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('cognome', models.CharField(max_length=50)),
                ('citta_nascita', models.CharField(max_length=25)),
                ('data_nascita', models.DateField()),
                ('indirizzo', models.CharField(max_length=100)),
                ('numero_civico', models.CharField(max_length=10, null=True)),
                ('cap', models.CharField(max_length=5)),
                ('citta', models.CharField(max_length=25)),
                ('codice_fiscale', models.CharField(max_length=16)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('cellulare', models.CharField(max_length=15)),
                ('altezza', models.CharField(blank=True, max_length=7, null=True)),
                ('email', models.EmailField(max_length=150)),
                ('sesso', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=1)),
                ('note', models.TextField(blank=True, null=True)),
                ('privacy', models.BooleanField(default=False)),
                ('data_creazione', models.DateTimeField(auto_now_add=True)),
                ('data_ultima_modifica', models.DateTimeField(auto_now_add=True)),
                ('ragione_sociale', models.CharField(blank=True, max_length=100, null=True)),
                ('sede', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('indirizzo_sede', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('cap_sede', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('telefono_sede', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('email_sede', models.EmailField(blank=True, default='', max_length=100, null=True)),
                ('partita_iva', models.CharField(blank=True, max_length=11, null=True)),
                ('codice_univoco', models.CharField(blank=True, max_length=8, null=True)),
                ('beneficiario_nome', models.CharField(blank=True, max_length=50, null=True)),
                ('beneficiario_cognome', models.CharField(blank=True, max_length=50, null=True)),
                ('beneficiario_cellulare', models.CharField(blank=True, max_length=15, null=True)),
                ('beneficiario_codice_fiscale', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clienti',
            },
        ),
        migrations.CreateModel(
            name='AnagraficaClienteDati',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincia_nascita', models.CharField(max_length=50)),
                ('stato_nascita', models.CharField(max_length=50)),
                ('provincia', models.CharField(max_length=50)),
                ('stato', models.CharField(max_length=50)),
                ('professione', models.CharField(max_length=50)),
                ('stato_civile', models.CharField(choices=[('Libero', 'Libero'), ('Coniugato', 'Coniugato')], default='Libero', max_length=15)),
                ('maggiorenne', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=1)),
                ('peso_attuale', models.CharField(max_length=5)),
                ('altezza', models.CharField(max_length=5)),
                ('bmi', models.CharField(max_length=8)),
                ('stato_attuale', models.CharField(max_length=20)),
                ('peso_ottimale', models.CharField(max_length=5)),
                ('scostamento_peso', models.CharField(max_length=7)),
                ('peso_desiderato', models.CharField(max_length=5)),
                ('struttura_fisica', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], default='A', max_length=1)),
                ('struttura_desiderata', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], default='A', max_length=1)),
                ('pressione_arteriosa', models.CharField(choices=[('Normale', 'Normale'), ('Ipoteso', 'Ipoteso'), ('Iperteso', 'Iperteso')], default='Normale', max_length=10)),
                ('diabete', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('tipo_diabete', models.CharField(blank=True, choices=[('Tipo 1', 'Tipo 1'), ('Tipo 2', 'Tipo 2')], max_length=10, null=True)),
                ('menopausa', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('gravidanza', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('mesi_gravidanza', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=1, null=True)),
                ('rapporto_corpo', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('droghe', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('allergie', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('allergie_elenco', models.CharField(blank=True, max_length=100, null=True)),
                ('farmaci', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('farmaci_elenco', models.CharField(blank=True, max_length=100, null=True)),
                ('sport', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('sport_praticato', models.CharField(blank=True, max_length=30, null=True)),
                ('sport_praticato_giorni', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=1, null=True)),
                ('gruppo_sanguigno', models.CharField(choices=[('N', 'Non so'), ('0', '0'), ('A', 'A'), ('B', 'B'), ('AB', 'AB')], default='N', max_length=7)),
                ('insonnia', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('stitichezza', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('fumo', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('numero_sigarette', models.CharField(blank=True, max_length=3, null=True)),
                ('delta_numero_sigarette', models.CharField(blank=True, max_length=3, null=True)),
                ('fame_nervosa', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('gengive', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('tatuaggi', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('bevi_acqua', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('litri_acqua', models.CharField(max_length=5)),
                ('filosofia_alimentare', models.CharField(choices=[('Onnivoro', 'Onnivoro'), ('Vegetariano', 'Vegetariano'), ('Vegano', 'Vegano')], default=0, max_length=15)),
                ('maiale', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('figli', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('numero_figli', models.CharField(blank=True, max_length=2, null=True)),
                ('pasto_condiviso', models.IntegerField(blank=True, choices=[(1, 'Sempre'), (2, 'Colazione'), (3, 'Pranzo'), (4, 'Cena'), (5, 'Mai')], null=True)),
                ('alimenti_preferiti', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Caffè', 'Caffè'), ('Pane', 'Pane'), ('Verdure', 'Verdure'), ('Carne', 'Carne'), ('Cereali', 'Cereali'), ('Cioccolata', 'Cioccolata'), ('Legumi', 'Legumi'), ('Alcolici', 'Alcolici'), ('Pasta', 'Pasta'), ('Frutta', 'Frutta'), ('Pesce', 'Pesce'), ('Dolci', 'Dolci'), ('Pizza', 'Pizza'), ('Latticini', 'Latticini')], max_length=30)),
                ('gusti_preferiti', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Piccante', 'Piccante'), ('Dolce', 'Dolce'), ('Salato', 'Salato'), ('Amaro', 'Amaro'), ('Aspro', 'Aspro'), ('Insipido', 'Insipido')], max_length=30)),
                ('problemi_cardiaci', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('problem_cardiaci_tipo', models.CharField(blank=True, max_length=100, null=True)),
                ('sicura', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('felice', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('stress', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('paure', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('lutti', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('incubi', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('stanco', models.CharField(choices=[('Mattina', 'Mattina'), ('Pomeriggio', 'Pomeriggio'), ('Sera', 'Sera')], default='Sera', max_length=14)),
                ('rabbia', models.IntegerField(choices=[(0, 'No'), (1, 'Si'), (2, 'A volte')], default=0)),
                ('sfogo', models.CharField(choices=[('Dentro', 'Dentro'), ('Fuori', 'Fuori'), ('Non so', 'Non so')], default='Non so', max_length=9)),
                ('colpa', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('piangi', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('carattere1', models.BooleanField(choices=[(1, 'Individualista'), (0, 'Altruista')], default=0)),
                ('carattere2', models.BooleanField(choices=[(1, 'Estroverso'), (0, 'Introverso')], default=0)),
                ('carattere3', models.BooleanField(choices=[(1, 'Ottimista'), (0, 'Pessimista')], default=0)),
                ('determinato', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=0)),
                ('amici_dieta', models.BooleanField(choices=[(1, 'Si'), (0, 'No')], default=0)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bmiottimale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sesso', models.CharField(max_length=20)),
                ('valore', models.DecimalField(decimal_places=2, max_digits=7)),
                ('costituzione', models.CharField(blank=True, max_length=20, null=True)),
                ('eta', models.IntegerField(blank=True, null=True)),
                ('morfologia', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Bmi ottimale',
                'verbose_name_plural': 'Bmi ottimale',
            },
        ),
        migrations.CreateModel(
            name='DatiBiometrici',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dato_biometrico', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Dato Biometrico',
                'verbose_name_plural': 'Dati Biometrici',
            },
        ),
        migrations.CreateModel(
            name='DatiBiometriciCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_creazione', models.DateTimeField(auto_now_add=True)),
                ('valore', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Dato Biometrico Cliente',
                'verbose_name_plural': 'Dati Biometrici Cliente',
            },
        ),
        migrations.CreateModel(
            name='GustiClienti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specifica', models.CharField(choices=[('S', 'PRESENTE'), ('A', 'ALLERGIA'), ('I', 'INTOLLERANZA'), ('N', 'NON GRADITO')], default='S', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='IndirizziClienti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indirizzo', models.CharField(max_length=100)),
                ('numero_civico', models.CharField(max_length=5, null=True)),
                ('cap', models.CharField(max_length=5)),
                ('citta', models.CharField(max_length=25)),
            ],
            options={
                'verbose_name': 'Indirizzo Cliente',
                'verbose_name_plural': 'indirizzi Cliente',
            },
        ),
        migrations.CreateModel(
            name='PatologieClienti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('patologia_sesso', models.CharField(choices=[('T', 'Tutti'), ('U', 'Uomo'), ('D', 'Donna')], default=0, max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='StatoPeso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sesso', models.CharField(max_length=1)),
                ('bmi', models.CharField(max_length=5)),
                ('qualitapeso', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalCheckUpCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now_add=True)),
                ('peso', models.FloatField(verbose_name='Peso')),
                ('bmi', models.FloatField(verbose_name='Bmi')),
                ('grasso_corporeo', models.FloatField(blank=True, null=True, verbose_name='Grasso corporeo')),
                ('muscolatura', models.FloatField(blank=True, null=True, verbose_name='Muscolatura')),
                ('metabolismo', models.FloatField(blank=True, null=True, verbose_name='Metabolismo')),
                ('grasso_viscerale', models.FloatField(blank=True, null=True, verbose_name='Grasso viscerale')),
                ('collocm', models.FloatField(verbose_name='Centimetri collo')),
                ('toracecm', models.FloatField(verbose_name='Centimetri torace')),
                ('cosciadxcm', models.FloatField(verbose_name='Centimetri coscia destra')),
                ('cosciasxcm', models.FloatField(verbose_name='Centimetri coscia sinistra')),
                ('fianchicm', models.FloatField(verbose_name='Centimetri fianchi')),
                ('addomecm', models.FloatField(verbose_name='Centimetri addome')),
                ('ginocchiodxcm', models.FloatField(verbose_name='Centimetri ginocchio destro')),
                ('ginocchiasxcm', models.FloatField(verbose_name='Centimetri ginocchio sinistro')),
                ('peso_ottimale', models.CharField(blank=True, max_length=6, null=True)),
                ('peso_desiderato', models.CharField(blank=True, max_length=6, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clienti.anagraficacliente')),
                ('programma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accordi.programmi')),
            ],
        ),
        migrations.CreateModel(
            name='Messaggi_interni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inserimento', models.DateField(auto_now_add=True)),
                ('letto', models.BooleanField(default=False)),
                ('testo', models.TextField(max_length=500)),
                ('tipo', models.CharField(choices=[('M', 'Mediche'), ('G', 'Generiche'), ('A', 'Amministrative')], default='G', max_length=1)),
                ('conversazione', models.IntegerField(max_length=10000)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clienti.anagraficacliente')),
            ],
            options={
                'verbose_name': 'Informazioni Medico-Cliente',
                'verbose_name_plural': 'Informazioni Medico-Cliente',
            },
        ),
    ]
